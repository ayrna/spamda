/*
SPAMDA: Software for Pre-processing and Analysis of Meteorological DAta to build datasets

Copyright (c) 2017-2018 by AYRNA Research Group. https://www.uco.es/ayrna/
	Authors: 
		Antonio Manuel Gomez Orellana, Juan Carlos Fernandez Caballero,
		Manuel Dorado Moreno, Pedro Antonio Gutierrez Pe√±a and 
		Cesar Hervas Martinez.

This program is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program,
in the file COPYING. If not, see <http://www.gnu.org/licenses/>.

Additional permissions under GNU GPL version 3 section 7:
1. Redistributions of source code, with or without modification, must retain
the above full copyright notice as author attributions.

2. Redistributions in binary form and/or the use of the documentation,
with or without modification, must reproduce the above full copyright notice
as author attributions in the documentation and/or materials provided with
the distribution.

3. Modified versions of source code and/or documentation, as well as binary
distributions, must be marked in reasonable ways as different from the original version.

4. Neither name of copyright holders nor the names of its contributors may be used
to endorse or promote products derived from this software for publicity purposes
without specific prior written permission.

5. Redistribution and/or use of source code, binary format and documentation,
with or without modification, could require indemnification of licensors
and authors by anyone who conveys the material (or modified versions of it)
with contractual assumptions of liability to the recipient, for any liability
that these contractual assumptions directly impose on those licensors and authors.

SPAMDA uses some external libraries. You can see their respective notices about license,
copyright and disclaimer in the following files. For a more complete information about
such licenses, see the distributions provided by their authors:
-Library NetCDF Java, version 4.6.10
	Notice of license in the file NetCDF-LICENSE
-Library SLF4J, version 1.7.25
	Notice of license in the file SLF4J-LICENSE
-Library WEKA, version 3.8.1
	Notice of license in the file WEKA-LICENSE

Contact information:
Juan Carlos Fernandez Caballero, PhD.
email: jfcaballero[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).
 */

package view;

import controller.ControllerViewNewDatasetFile;
import view.interfaces.InterfaceViewNewDatasetFile;
import java.awt.Color;
import javax.swing.DefaultListModel;


/**
 * This class defines the view to create a new intermediate dataset file.
 * 
 */
public class NewDatasetFile extends javax.swing.JDialog implements InterfaceViewNewDatasetFile {
            
    /* Generated by NetBeans. */
    private static final long serialVersionUID = -3865047214803479083L;
        
    
    /**
     * Creates new dialog NewDatasetFile
     * 
     * @param parent Jframe that creates this dialog.
     * @param modal Indicates if the dialog is modal or not.
     */
    public NewDatasetFile(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();     
        
    }
    
    
    /* Methods of InterfaceViewNewDatasetFile */

    

    @Override
    public void setController(ControllerViewNewDatasetFile controller){
        
        /* Buttons. */
        btnSelectFile.addActionListener(controller);
        btnUnSelectFile.addActionListener(controller);
        btnCancelDataset.addActionListener(controller);
        btnSaveDataset.addActionListener(controller);
        btnBack.addActionListener(controller);
        btnNew.addActionListener(controller);
        
        jlstTXTFiles.addMouseListener(controller);
        jlstSelectedFiles.addMouseListener(controller);
        
        /* Menu items. */        
        itemBack.addActionListener(controller);        
        itemHelpManual.addActionListener(controller);   
    
    }

    
    @Override
    public void showView(){        
        
        /* Shows the view. */
        this.setVisible(true);
    
    }

    
    @Override
    public void closeView(){
    
        /* Closes the view. */
        this.dispose();
        
    }
    
    
    @Override
    public void setEnabledPanelDataset(boolean enabledDisabled){
        
        /* Sets enabled/disabled all elements in panel. */
        
        /* Disabled color. */
        Color disabledColor = new Color(245,245,245);

        jtaShortDescription.setEnabled(enabledDisabled);
        jtfFileName.setEnabled(enabledDisabled);
        btnCancelDataset.setEnabled(enabledDisabled);
        btnSaveDataset.setEnabled(enabledDisabled);
                
        /* Changes background color depending on enabled/disabled. */
        if(enabledDisabled){
            
            /* Enabled. */
            
            /* Enables these controls. */
            jtaShortDescription.setBackground(Color.white);
            jtfFileName.setBackground(Color.white);
            
            /* Disables these controls. */
            jlstTXTFiles.setBackground(disabledColor);
            jlstSelectedFiles.setBackground(disabledColor);
        
        }else{
                    
            /* Disabled. */
            
            /* Disables these controls. */
            jtaShortDescription.setBackground(disabledColor);
            jtfFileName.setBackground(disabledColor);

            /* Enables these controls. */
            jlstTXTFiles.setBackground(Color.white);
            jlstSelectedFiles.setBackground(Color.white);
            
        }        
        
    }
    
    
    @Override
    public void setDefaultFocusPanelDataset(){
        
        /* Sets focus on default component */
        
        jtaShortDescription.grabFocus();
        
    }
    
    
    @Override
    public void clearFieldsDatasetFile(){
        
        /* Clears contents of dataset fields. */
        
        jtfFileName.setText("");
        jtaShortDescription.setText("");
        
    }
    
    
    @Override
    public String getDatasetFileName(){
        
        /* Gets the dataset file name to create. */
        
        return jtfFileName.getText();
        
    }
    

    @Override
    public String getShortDescription(){
        
        /* Gets the short descrption about the dataset file created. */
        
        return jtaShortDescription.getText();
    
    }
    
                
    @Override
    public void setTXTFilesListModel(DefaultListModel<String> listmodel){
        
        /* Show the .TXT files that belong to the buoy. */
        
        jlstTXTFiles.setModel(listmodel);      
        
    }

    
    @Override
    public void setTXTSelectedFilesListModel(DefaultListModel<String> listmodel){
        
        /* Show the .TXT files that belong to the buoy. */
        
        jlstSelectedFiles.setModel(listmodel);      
        
    }
    
    
    
    @Override
    public int getSelectedTXTIndex(){
        
        /* Gets the selected .TXT file. */
        
        return jlstTXTFiles.getSelectedIndex();
    
    }

    
    @Override
    public int getSelectedDatasetIndex(){
        
        /* Gets the selected .TXT file to unselect. */
        
        return jlstSelectedFiles.getSelectedIndex();
    
    }
    
    @Override
    public void setEnablePanelSelectionFiles(boolean state){

        /* Sets enabled true/false. */
        
        btnSelectFile.setEnabled(state);
        btnUnSelectFile.setEnabled(state);
        jlstTXTFiles.setEnabled(state);
        jlstSelectedFiles.setEnabled(state);

    }

        
    @Override
    public void setEnableCancelButtom(boolean state){
        
        /* Sets enabled true/false buttom Cancel. */
        
        btnNew.setEnabled(state);
    
    }
    
    
    @Override
    public void setEnableNewButtom(boolean state){
        
        /* Sets enabled true/false buttom New. */
    
        btnBack.setEnabled(state);
    
    }
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNew = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jpnSelectedTXTFiles = new javax.swing.JPanel();
        jscrSelectedFiles = new javax.swing.JScrollPane();
        jlstSelectedFiles = new javax.swing.JList<>();
        btnSelectFile = new javax.swing.JButton();
        btnUnSelectFile = new javax.swing.JButton();
        jpnTXTFiles = new javax.swing.JPanel();
        jscrTXTFiles = new javax.swing.JScrollPane();
        jlstTXTFiles = new javax.swing.JList<>();
        jpnDataset = new javax.swing.JPanel();
        lblShortDescription = new javax.swing.JLabel();
        jscrShortDescription = new javax.swing.JScrollPane();
        jtaShortDescription = new javax.swing.JTextArea();
        lblFileName = new javax.swing.JLabel();
        jtfFileName = new javax.swing.JTextField();
        btnCancelDataset = new javax.swing.JButton();
        btnSaveDataset = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jmMenu = new javax.swing.JMenu();
        itemBack = new javax.swing.JMenuItem();
        jmHelp = new javax.swing.JMenu();
        itemHelpManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SPAMDA 1.0-New intermediate dataset");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setResizable(false);

        btnNew.setText("Create");
        btnNew.setToolTipText("Create new intermediate dataset with selected annual text files");

        btnBack.setText("Back");
        btnBack.setToolTipText("Back to Datasets");

        jpnSelectedTXTFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected annual text files to use"));

        jlstSelectedFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlstSelectedFiles.setToolTipText("Double click to deselect the annual text file");
        jlstSelectedFiles.setName("jlstSelectedFiles"); // NOI18N
        jscrSelectedFiles.setViewportView(jlstSelectedFiles);

        javax.swing.GroupLayout jpnSelectedTXTFilesLayout = new javax.swing.GroupLayout(jpnSelectedTXTFiles);
        jpnSelectedTXTFiles.setLayout(jpnSelectedTXTFilesLayout);
        jpnSelectedTXTFilesLayout.setHorizontalGroup(
            jpnSelectedTXTFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrSelectedFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jpnSelectedTXTFilesLayout.setVerticalGroup(
            jpnSelectedTXTFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrSelectedFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnSelectFile.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnSelectFile.setText("->");
        btnSelectFile.setToolTipText("Select annual text file in intermediate dataset creation");
        btnSelectFile.setActionCommand("Select file");

        btnUnSelectFile.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnUnSelectFile.setText("<-");
        btnUnSelectFile.setToolTipText("Deselect annual text file from intermediate dataset creation");
        btnUnSelectFile.setActionCommand("Unselect file");

        jpnTXTFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Annual text files of the buoy"));

        jlstTXTFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlstTXTFiles.setToolTipText("Double click to select the annual text file");
        jlstTXTFiles.setName("jlstTXTFiles"); // NOI18N
        jscrTXTFiles.setViewportView(jlstTXTFiles);

        javax.swing.GroupLayout jpnTXTFilesLayout = new javax.swing.GroupLayout(jpnTXTFiles);
        jpnTXTFiles.setLayout(jpnTXTFilesLayout);
        jpnTXTFilesLayout.setHorizontalGroup(
            jpnTXTFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jpnTXTFilesLayout.setVerticalGroup(
            jpnTXTFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jpnDataset.setBorder(javax.swing.BorderFactory.createTitledBorder("Intermediate dataset"));

        lblShortDescription.setText("Short description");

        jtaShortDescription.setColumns(20);
        jtaShortDescription.setRows(5);
        jtaShortDescription.setToolTipText("Short description of the intermediate dataset to create");
        jscrShortDescription.setViewportView(jtaShortDescription);

        lblFileName.setText("File name");

        jtfFileName.setToolTipText("File name of the intermediate dataset to create");

        btnCancelDataset.setText("Cancel");
        btnCancelDataset.setToolTipText("Cancel intermediate dataset creation.");
        btnCancelDataset.setActionCommand("Cancel dataset");

        btnSaveDataset.setText("Save");
        btnSaveDataset.setToolTipText("Save intermediate dataset.");
        btnSaveDataset.setActionCommand("Save dataset");

        javax.swing.GroupLayout jpnDatasetLayout = new javax.swing.GroupLayout(jpnDataset);
        jpnDataset.setLayout(jpnDatasetLayout);
        jpnDatasetLayout.setHorizontalGroup(
            jpnDatasetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnDatasetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnDatasetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnDatasetLayout.createSequentialGroup()
                        .addComponent(lblShortDescription)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpnDatasetLayout.createSequentialGroup()
                        .addComponent(jscrShortDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(jpnDatasetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpnDatasetLayout.createSequentialGroup()
                                .addComponent(btnCancelDataset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSaveDataset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpnDatasetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblFileName)
                                .addComponent(jtfFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jpnDatasetLayout.setVerticalGroup(
            jpnDatasetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnDatasetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnDatasetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpnDatasetLayout.createSequentialGroup()
                        .addComponent(lblFileName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpnDatasetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelDataset)
                            .addComponent(btnSaveDataset)))
                    .addGroup(jpnDatasetLayout.createSequentialGroup()
                        .addComponent(lblShortDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jscrShortDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jmMenu.setText("Menu");

        itemBack.setText("Back");
        itemBack.setToolTipText("Back to Datasets.");
        jmMenu.add(itemBack);

        jMenuBar.add(jmMenu);

        jmHelp.setText("Help");

        itemHelpManual.setText("Help (User manual)");
        jmHelp.add(itemHelpManual);

        jMenuBar.add(jmHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpnDataset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpnTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUnSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpnSelectedTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpnTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpnSelectedTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnSelectFile)
                        .addGap(18, 18, 18)
                        .addComponent(btnUnSelectFile)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnDataset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnNew))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancelDataset;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSaveDataset;
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JButton btnUnSelectFile;
    private javax.swing.JMenuItem itemBack;
    private javax.swing.JMenuItem itemHelpManual;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JList<String> jlstSelectedFiles;
    private javax.swing.JList<String> jlstTXTFiles;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenu jmMenu;
    private javax.swing.JPanel jpnDataset;
    private javax.swing.JPanel jpnSelectedTXTFiles;
    private javax.swing.JPanel jpnTXTFiles;
    private javax.swing.JScrollPane jscrSelectedFiles;
    private javax.swing.JScrollPane jscrShortDescription;
    private javax.swing.JScrollPane jscrTXTFiles;
    private javax.swing.JTextArea jtaShortDescription;
    private javax.swing.JTextField jtfFileName;
    private javax.swing.JLabel lblFileName;
    private javax.swing.JLabel lblShortDescription;
    // End of variables declaration//GEN-END:variables
}
