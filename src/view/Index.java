/*
SPAMDA: Software for Pre-processing and Analysis of Meteorological DAta to build datasets

Copyright (c) 2017-2021 by AYRNA Research Group. https://www.uco.es/ayrna/
    Authors: 
      Gómez-Orellana, A.M.; Fernández, J.C.; Dorado-Moreno, M.; Gutiérrez, P.A.; Hervás-Martínez, C.
      Building Suitable Datasets for Soft Computing and Machine Learning Techniques from Meteorological
       Data Integration: A Case Study for Predicting Significant Wave Height and Energy Flux.
      Energies 2021, 14, 468. https://doi.org/10.3390/en14020468                                                                       

This program is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program,
in the file COPYING. If not, see <http://www.gnu.org/licenses/>.

Additional permissions under GNU GPL version 3 section 7:
1. Redistributions of source code, with or without modification, must retain
the above full copyright notice as author attributions.

2. Redistributions in binary form and/or the use of the documentation,
with or without modification, must reproduce the above full copyright notice
as author attributions in the documentation and/or materials provided with
the distribution.

3. Modified versions of source code and/or documentation, as well as binary
distributions, must be marked in reasonable ways as different from the original version.

4. Neither name of copyright holders nor the names of its contributors may be used
to endorse or promote products derived from this software for publicity purposes
without specific prior written permission.

5. Redistribution and/or use of source code, binary format and documentation,
with or without modification, could require indemnification of licensors
and authors by anyone who conveys the material (or modified versions of it)
with contractual assumptions of liability to the recipient, for any liability
that these contractual assumptions directly impose on those licensors and authors.

SPAMDA uses some external libraries. You can see their respective notices about license,
copyright and disclaimer in the following files. For a more complete information about
such licenses, see the distributions provided by their authors:
-Library NetCDF Java, version 4.6.10
	Notice of license in the file NetCDF-LICENSE
-Library SLF4J, version 1.7.25
	Notice of license in the file SLF4J-LICENSE
-Library WEKA, version 3.8.1
	Notice of license in the file WEKA-LICENSE

Contact information:
Antonio Manuel Gomez Orellana, Mr.
email: am[dot]gomez[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).

Juan Carlos Fernandez Caballero, PhD.
email: jfcaballero[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).
 */

package view;

import controller.ControllerViewIndex;
import view.interfaces.InterfaceViewIndex;


/**
 * This class defines the main view of the application.
 * 
 */
public class Index extends javax.swing.JFrame implements InterfaceViewIndex {

    /* Generated by NetBeans. */
    private static final long serialVersionUID = -6434284015082956632L;

    
    /**
     * Creates new frame Index.
     */
    public Index() {
        initComponents();
                        
    }
    
    
    /* Methods of InterfaceViewIndex */

    

    @Override
    public void setController(ControllerViewIndex controller){
        
        /* Buttons. */     
        btnManageBuoys.addActionListener(controller);
        btnManageReanalysisData.addActionListener(controller);
        btnHelp.addActionListener(controller);
        
        /* Menu items. */        
        itemManageBuoys.addActionListener(controller);
        itemManageReanalysisData.addActionListener(controller);
        itemExit.addActionListener(controller);
        itemConverter.addActionListener(controller);
        itemOpenARFF.addActionListener(controller);
        itemAbout.addActionListener(controller);
        itemHelp.addActionListener(controller);        
        
        /* When user clicks on Exit icon. */
        this.addWindowListener(controller);
        
    }

    
    @Override
    public void showView(){        
        
        /* Shows the view. */    
        this.setVisible(true);
    
    }

    
    @Override
    public void closeView(){
    
        /* Closes the view. */
        this.dispose();
        
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnHelp = new javax.swing.JButton();
        btnManageBuoys = new javax.swing.JButton();
        btnManageReanalysisData = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jmMainMenu = new javax.swing.JMenuBar();
        jmMenu = new javax.swing.JMenu();
        itemManageBuoys = new javax.swing.JMenuItem();
        itemManageReanalysisData = new javax.swing.JMenuItem();
        itemExit = new javax.swing.JMenuItem();
        jmTools = new javax.swing.JMenu();
        itemConverter = new javax.swing.JMenuItem();
        itemOpenARFF = new javax.swing.JMenuItem();
        jmHelp = new javax.swing.JMenu();
        itemHelp = new javax.swing.JMenuItem();
        itemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("SPAMDA 1.0");
        setName("Index"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnHelp.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        btnHelp.setText("Help");
        btnHelp.setToolTipText("Show help");
        btnHelp.setActionCommand("Help (User manual)");

        btnManageBuoys.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        btnManageBuoys.setText("<html>Manage buoys<br>data</html>");
        btnManageBuoys.setToolTipText("Manage buoys data");
        btnManageBuoys.setActionCommand("Manage buoys data");

        btnManageReanalysisData.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        btnManageReanalysisData.setText("<html>Manage<br>reanalysis data</html>");
        btnManageReanalysisData.setToolTipText("Manage reanalysis data");
        btnManageReanalysisData.setActionCommand("Manage reanalysis data");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imageIndex.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnManageReanalysisData, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManageBuoys, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnManageBuoys, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnManageReanalysisData, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 240));
        jPanel1.getAccessibleContext().setAccessibleName("");

        jmMenu.setText("Menu");

        itemManageBuoys.setText("Manage buoys data");
        itemManageBuoys.setToolTipText("");
        jmMenu.add(itemManageBuoys);

        itemManageReanalysisData.setText("Manage reanalysis data");
        itemManageReanalysisData.setToolTipText("");
        jmMenu.add(itemManageReanalysisData);

        itemExit.setText("Exit");
        jmMenu.add(itemExit);

        jmMainMenu.add(jmMenu);

        jmTools.setText("Tools");

        itemConverter.setText("Dataset converter");
        jmTools.add(itemConverter);

        itemOpenARFF.setText("Open ARFF file with WEKA");
        jmTools.add(itemOpenARFF);

        jmMainMenu.add(jmTools);

        jmHelp.setText("Help");

        itemHelp.setText("Help (User manual)");
        jmHelp.add(itemHelp);

        itemAbout.setText("About");
        jmHelp.add(itemAbout);

        jmMainMenu.add(jmHelp);

        setJMenuBar(jmMainMenu);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnManageBuoys;
    private javax.swing.JButton btnManageReanalysisData;
    private javax.swing.JMenuItem itemAbout;
    private javax.swing.JMenuItem itemConverter;
    private javax.swing.JMenuItem itemExit;
    private javax.swing.JMenuItem itemHelp;
    private javax.swing.JMenuItem itemManageBuoys;
    private javax.swing.JMenuItem itemManageReanalysisData;
    private javax.swing.JMenuItem itemOpenARFF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenuBar jmMainMenu;
    private javax.swing.JMenu jmMenu;
    private javax.swing.JMenu jmTools;
    // End of variables declaration//GEN-END:variables
}
