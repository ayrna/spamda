/*
SPAMDA: Software for Pre-processing and Analysis of Meteorological DAta to build datasets

Copyright (c) 2017-2021 by AYRNA Research Group. https://www.uco.es/ayrna/
    Authors: 
      Gómez-Orellana, A.M.; Fernández, J.C.; Dorado-Moreno, M.; Gutiérrez, P.A.; Hervás-Martínez, C.
      Building Suitable Datasets for Soft Computing and Machine Learning Techniques from Meteorological
       Data Integration: A Case Study for Predicting Significant Wave Height and Energy Flux.
      Energies 2021, 14, 468. https://doi.org/10.3390/en14020468                                                                       

This program is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program,
in the file COPYING. If not, see <http://www.gnu.org/licenses/>.

Additional permissions under GNU GPL version 3 section 7:
1. Redistributions of source code, with or without modification, must retain
the above full copyright notice as author attributions.

2. Redistributions in binary form and/or the use of the documentation,
with or without modification, must reproduce the above full copyright notice
as author attributions in the documentation and/or materials provided with
the distribution.

3. Modified versions of source code and/or documentation, as well as binary
distributions, must be marked in reasonable ways as different from the original version.

4. Neither name of copyright holders nor the names of its contributors may be used
to endorse or promote products derived from this software for publicity purposes
without specific prior written permission.

5. Redistribution and/or use of source code, binary format and documentation,
with or without modification, could require indemnification of licensors
and authors by anyone who conveys the material (or modified versions of it)
with contractual assumptions of liability to the recipient, for any liability
that these contractual assumptions directly impose on those licensors and authors.

SPAMDA uses some external libraries. You can see their respective notices about license,
copyright and disclaimer in the following files. For a more complete information about
such licenses, see the distributions provided by their authors:
-Library NetCDF Java, version 4.6.10
	Notice of license in the file NetCDF-LICENSE
-Library SLF4J, version 1.7.25
	Notice of license in the file SLF4J-LICENSE
-Library WEKA, version 3.8.1
	Notice of license in the file WEKA-LICENSE

Contact information:
Antonio Manuel Gomez Orellana, Mr.
email: am[dot]gomez[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).

Juan Carlos Fernandez Caballero, PhD.
email: jfcaballero[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).
 */

package view;

import controller.ControllerViewBuoyData;
import view.interfaces.InterfaceViewBuoyData;
import javax.swing.DefaultListModel;


/**
 * This class defines the view to enter, show or modify the information of a buoy.
 * 
 */
public class BuoyData extends javax.swing.JDialog implements InterfaceViewBuoyData {   
    
    /* Generated by NetBeans. */
    private static final long serialVersionUID = -1424244715326718122L;

    
    /**
     * Creates new dialog BuoyData
     * 
     * @param parent Jframe that creates this dialog.
     * @param modal Indicates if the dialog is modal or not.
     */
    public BuoyData(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();        

    }
    
    
    /* Methods of InterfaceViewBuoyData */

    
    @Override
    public void setController(ControllerViewBuoyData controller){
        
        /* Buttons. */
        btnClear.addActionListener(controller);
        btnSave.addActionListener(controller);
        btnCancel.addActionListener(controller);
        btnAddFiles.addActionListener(controller);
        btnDelete.addActionListener(controller);

        
        /* Latitude, Longitute controls. */
        jtfLatitude.addFocusListener(controller);
        jtfLongitude.addFocusListener(controller);
        jcmbLatitudeNS.addActionListener(controller);
        jcmbLongitudeEW.addActionListener(controller);
        
        
        /* Menu items. */        
        itemCancel.addActionListener(controller);        
        itemHelpManual.addActionListener(controller);    
    
    }

    
    @Override
    public void showView(String title){
        
        /* Sets the title */
        this.setTitle(title);

        /* Shows the view. */
        this.setVisible(true);
    
    }

    
    @Override
    public void closeView(){
    
        /* Closes the view. */
        this.dispose();
        
    }
                
    
    @Override
    public String getBuoyStationID(){
        
        /* Gets the stationid of the buoy. */
        return jtfStationID.getText();
        
    }

    
    @Override
    public void setBuoyStationID(String stationID){
        
        /* Sets the stationid of the buoy. */
        jtfStationID.setText(stationID);
        
    }

    
    @Override
    public String getBuoyDescription(){
        
        /* Gets the description f the buoy. */
        return jtfDescription.getText();
        
    }

    
    @Override
    public void setBuoyDescription(String description){
        
        /* Sets the description of the buoy. */
        jtfDescription.setText(description);

    }
    

    @Override
    public String getBuoyLatitude(){
        
        /* Gets the latitude of the buoy. */                
        return jtfLatitude.getText();
        
    }

    
    @Override
    public void setBuoyLatitude(String latitude){
        
        /* Sets the latitude of the buoy. */
        jtfLatitude.setText(latitude);
        
    }

    
    @Override
    public String getBuoyLatitudeNS(){
        
        /* Gets the hemisphere North / South of the buoy. */                
        return jcmbLatitudeNS.getSelectedItem().toString();
        
    }

    
    @Override
    public void setBuoyLatitudeNS(Object NS){
        
        /* Sets the hemisphere North / South of the buoy. */        
        jcmbLatitudeNS.setSelectedItem(NS);
        
    }    
    
    
    @Override
    public String getBuoyLongitude(){
       
        /* Gets the longitude of the buoy. */        
        return jtfLongitude.getText();
        
    }

    
    @Override
    public void setBuoyLongitude(String longitude){
        
        /* Sets the longitude of the buoy. */
        jtfLongitude.setText(longitude);
        
    }
    

    @Override
    public String getBuoyLongitudeEW(){
        
        /* Gets the hemisphere East / West the buoy. */                
        return jcmbLongitudeEW.getSelectedItem().toString();
        
    }

    
    @Override
    public void setBuoyLongitudeEW(Object EW){
        
        /* Sets the hemisphere East / West the buoy. */        
        jcmbLongitudeEW.setSelectedItem(EW);
        
    }
        
        
    @Override
    public void clearFields(){
        
        /* Clears the data of every field in form. */
        
        jtfStationID.setText("");
        jtfDescription.setText("");
        jtfLatitude.setText("0");
        jtfLongitude.setText("0");
        jcmbLatitudeNS.setSelectedItem("N");        
        jcmbLongitudeEW.setSelectedItem("E");

    }

    
    @Override
    public void setDefaultFocus(){
        
        /* Sets focus on default component in form. */        
        jtfStationID.grabFocus();               

    }    
    
    
    @Override
    public void setListModel(DefaultListModel<String> listmodel){
        
        /* Show the files that belong to the buoy. */        
        jlstFiles.setModel(listmodel);      
        
    }

    
    @Override
    public int getSelectedIndex(){
        
        /* Gets the selected file to delete. */
        
        return jlstFiles.getSelectedIndex();
    
    }

    
    @Override    
    public void setCoordinatesNotations(String notations){
        
        /* Sets the notations of coordinates typed by user. */
        
        /* Clear previous data. */
        jtaCoordinatesNotations.setText(null);

        /* Sets notations. */
        jtaCoordinatesNotations.setText(notations);
        
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnBuoy = new javax.swing.JPanel();
        lblStationID = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        lblLatitude = new javax.swing.JLabel();
        lblRangeLatitude = new javax.swing.JLabel();
        jcmbLatitudeNS = new javax.swing.JComboBox<>();
        lblLongitude = new javax.swing.JLabel();
        lblRangeLongitude = new javax.swing.JLabel();
        jcmbLongitudeEW = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaCoordinatesNotations = new javax.swing.JTextArea();
        jtfLatitude = new javax.swing.JTextField();
        jtfLongitude = new javax.swing.JTextField();
        jtfStationID = new javax.swing.JTextField();
        jtfDescription = new javax.swing.JTextField();
        jpnTXTFiles = new javax.swing.JPanel();
        jscrFiles = new javax.swing.JScrollPane();
        jlstFiles = new javax.swing.JList<>();
        btnAddFiles = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jmMenu = new javax.swing.JMenu();
        itemCancel = new javax.swing.JMenuItem();
        jmHelp = new javax.swing.JMenu();
        itemHelpManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SPAMDA 1.0-New buoy");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setResizable(false);

        jpnBuoy.setBorder(javax.swing.BorderFactory.createTitledBorder("Information of the buoy"));

        lblStationID.setText("Station ID");

        lblDescription.setText("Description");

        lblLatitude.setText("Latitude");

        lblRangeLatitude.setText("[0,90]");

        jcmbLatitudeNS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "S" }));
        jcmbLatitudeNS.setToolTipText("Hemisphere North/South");
        jcmbLatitudeNS.setActionCommand("Change latitude notation");

        lblLongitude.setText("Longitude");

        lblRangeLongitude.setText("[0,180]");

        jcmbLongitudeEW.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "E", "W" }));
        jcmbLongitudeEW.setToolTipText("Hemisphere East/West");
        jcmbLongitudeEW.setActionCommand("Change longitude notation");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Other notations:"));

        jtaCoordinatesNotations.setEditable(false);
        jtaCoordinatesNotations.setBackground(new java.awt.Color(245, 245, 245));
        jtaCoordinatesNotations.setColumns(20);
        jtaCoordinatesNotations.setRows(5);
        jtaCoordinatesNotations.setToolTipText("Other notations of latitude/longitude");
        jScrollPane1.setViewportView(jtaCoordinatesNotations);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jtfLatitude.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfLatitude.setToolTipText("Latitute of the buoy");
        jtfLatitude.setName("jtfLatitude"); // NOI18N

        jtfLongitude.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfLongitude.setToolTipText("Longitude of the buoy");
        jtfLongitude.setName("jtfLongitude"); // NOI18N

        jtfStationID.setToolTipText("Station ID of the buoy");

        jtfDescription.setToolTipText("Description of the buoy");

        javax.swing.GroupLayout jpnBuoyLayout = new javax.swing.GroupLayout(jpnBuoy);
        jpnBuoy.setLayout(jpnBuoyLayout);
        jpnBuoyLayout.setHorizontalGroup(
            jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBuoyLayout.createSequentialGroup()
                .addGroup(jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnBuoyLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpnBuoyLayout.createSequentialGroup()
                                .addComponent(lblLatitude)
                                .addGap(6, 6, 6)
                                .addComponent(lblRangeLatitude))
                            .addComponent(lblStationID)
                            .addComponent(lblDescription))
                        .addGap(12, 12, 12)
                        .addGroup(jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnBuoyLayout.createSequentialGroup()
                                .addComponent(jtfLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcmbLatitudeNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblLongitude)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblRangeLongitude)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcmbLongitudeEW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfStationID, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpnBuoyLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnBuoyLayout.setVerticalGroup(
            jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBuoyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStationID)
                    .addComponent(jtfStationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescription)
                    .addComponent(jtfDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnBuoyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLatitude)
                    .addComponent(jcmbLatitudeNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRangeLatitude)
                    .addComponent(lblLongitude)
                    .addComponent(jcmbLongitudeEW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRangeLongitude)
                    .addComponent(jtfLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpnTXTFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Annual text files of the buoy"));

        jlstFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlstFiles.setToolTipText("Annual text files of the buoy");
        jscrFiles.setViewportView(jlstFiles);

        btnAddFiles.setText("Add file");
        btnAddFiles.setToolTipText("Show a dialog to add an annual text file");

        btnDelete.setText("Delete file");
        btnDelete.setToolTipText("Delete the selected annual text file");

        javax.swing.GroupLayout jpnTXTFilesLayout = new javax.swing.GroupLayout(jpnTXTFiles);
        jpnTXTFiles.setLayout(jpnTXTFilesLayout);
        jpnTXTFilesLayout.setHorizontalGroup(
            jpnTXTFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnTXTFilesLayout.createSequentialGroup()
                .addComponent(jscrFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnTXTFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpnTXTFilesLayout.setVerticalGroup(
            jpnTXTFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jpnTXTFilesLayout.createSequentialGroup()
                .addComponent(btnAddFiles)
                .addGap(18, 18, 18)
                .addComponent(btnDelete))
        );

        btnCancel.setText("Cancel");
        btnCancel.setToolTipText("Cancel action and back to Buoys");

        btnSave.setText("Save");
        btnSave.setToolTipText("Save information in database");

        btnClear.setText("Clear");
        btnClear.setToolTipText("Clear the content of all fields");

        jmMenu.setText("Menu");

        itemCancel.setText("Cancel");
        itemCancel.setToolTipText("Cancel action and back to Buoys.");
        jmMenu.add(itemCancel);

        jMenuBar.add(jmMenu);

        jmHelp.setText("Help");

        itemHelpManual.setText("Help (User manual)");
        jmHelp.add(itemHelpManual);

        jMenuBar.add(jmHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jpnBuoy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jpnTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnBuoy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jpnTXTFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFiles;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JMenuItem itemCancel;
    private javax.swing.JMenuItem itemHelpManual;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcmbLatitudeNS;
    private javax.swing.JComboBox<String> jcmbLongitudeEW;
    private javax.swing.JList<String> jlstFiles;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenu jmMenu;
    private javax.swing.JPanel jpnBuoy;
    private javax.swing.JPanel jpnTXTFiles;
    private javax.swing.JScrollPane jscrFiles;
    private javax.swing.JTextArea jtaCoordinatesNotations;
    private javax.swing.JTextField jtfDescription;
    private javax.swing.JTextField jtfLatitude;
    private javax.swing.JTextField jtfLongitude;
    private javax.swing.JTextField jtfStationID;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblLatitude;
    private javax.swing.JLabel lblLongitude;
    private javax.swing.JLabel lblRangeLatitude;
    private javax.swing.JLabel lblRangeLongitude;
    private javax.swing.JLabel lblStationID;
    // End of variables declaration//GEN-END:variables
}
