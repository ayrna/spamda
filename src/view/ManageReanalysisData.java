/*
SPAMDA: Software for Pre-processing and Analysis of Meteorological DAta to build datasets

Copyright (c) 2017-2021 by AYRNA Research Group. https://www.uco.es/ayrna/
    Authors: 
      Gómez-Orellana, A.M.; Fernández, J.C.; Dorado-Moreno, M.; Gutiérrez, P.A.; Hervás-Martínez, C.
      Building Suitable Datasets for Soft Computing and Machine Learning Techniques from Meteorological
       Data Integration: A Case Study for Predicting Significant Wave Height and Energy Flux.
      Energies 2021, 14, 468. https://doi.org/10.3390/en14020468                                                                       

This program is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program,
in the file COPYING. If not, see <http://www.gnu.org/licenses/>.

Additional permissions under GNU GPL version 3 section 7:
1. Redistributions of source code, with or without modification, must retain
the above full copyright notice as author attributions.

2. Redistributions in binary form and/or the use of the documentation,
with or without modification, must reproduce the above full copyright notice
as author attributions in the documentation and/or materials provided with
the distribution.

3. Modified versions of source code and/or documentation, as well as binary
distributions, must be marked in reasonable ways as different from the original version.

4. Neither name of copyright holders nor the names of its contributors may be used
to endorse or promote products derived from this software for publicity purposes
without specific prior written permission.

5. Redistribution and/or use of source code, binary format and documentation,
with or without modification, could require indemnification of licensors
and authors by anyone who conveys the material (or modified versions of it)
with contractual assumptions of liability to the recipient, for any liability
that these contractual assumptions directly impose on those licensors and authors.

SPAMDA uses some external libraries. You can see their respective notices about license,
copyright and disclaimer in the following files. For a more complete information about
such licenses, see the distributions provided by their authors:
-Library NetCDF Java, version 4.6.10
	Notice of license in the file NetCDF-LICENSE
-Library SLF4J, version 1.7.25
	Notice of license in the file SLF4J-LICENSE
-Library WEKA, version 3.8.1
	Notice of license in the file WEKA-LICENSE

Contact information:
Antonio Manuel Gomez Orellana, Mr.
email: am[dot]gomez[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).

Juan Carlos Fernandez Caballero, PhD.
email: jfcaballero[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).
 */

package view;

import controller.ControllerViewManageReanalysisData;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import view.interfaces.InterfaceViewManageReanalysisData;


/**
 * This class defines the view to manage the information of the reanalysis data files entered in the application.
 * 
 */
public class ManageReanalysisData extends javax.swing.JDialog implements InterfaceViewManageReanalysisData {

    /* Generated by NetBeans. */
    private static final long serialVersionUID = -5707301938230662129L;
    

    /**
     * Creates new dialog ManageReanalysisData
     * 
     * @param parent Jframe that creates this dialog.
     * @param modal Indicates if the dialog is modal or not.
     */
    public ManageReanalysisData(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        /* Sets columns size (grid with information about reanalysis data) . */
        tblReanalysisData.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblReanalysisData.getColumnModel().getColumn(1).setPreferredWidth(250);
        tblReanalysisData.getColumnModel().getColumn(2).setPreferredWidth(125);
        tblReanalysisData.getColumnModel().getColumn(3).setPreferredWidth(82);
        tblReanalysisData.getColumnModel().getColumn(4).setPreferredWidth(84);
        tblReanalysisData.getColumnModel().getColumn(5).setPreferredWidth(150);
        tblReanalysisData.getColumnModel().getColumn(6).setPreferredWidth(150);
        tblReanalysisData.getColumnModel().getColumn(7).setPreferredWidth(95);
        tblReanalysisData.getColumnModel().getColumn(8).setPreferredWidth(95);
        tblReanalysisData.getColumnModel().getColumn(9).setPreferredWidth(100);
        tblReanalysisData.getColumnModel().getColumn(10).setPreferredWidth(95);
                                
    }
    
    
    /* Methods of InterfaceViewManageReanalysisData */

    

    @Override
    public void setController(ControllerViewManageReanalysisData controller){

        /* Menu items. */        
        itemMainMenu.addActionListener(controller);
        itemHelpManual.addActionListener(controller);
        
        
        /* Buttons. */
        btnDeleteFile.addActionListener(controller);
        btnAddFile.addActionListener(controller);
        btnMainMenu.addActionListener(controller);
        
    }

    
    @Override
    public void showView(){
        
        /* Shows the view. */    
        
        this.setVisible(true);
    
    }

    
    @Override
    public void closeView(){
    
        /* Closes the view. */
        this.dispose();
        
    }
        
    
    @Override
    public DefaultTableModel getModelReanalysisData(){
    
        /* Returns Model of the table that will show the information about reanalysis data. */
        return (DefaultTableModel) tblReanalysisData.getModel();
        
    }
    
    
    @Override
    public void setModelReanalysisData(DefaultTableModel datamodel){
        
        /* Show the information received about each file. */
        
        tblReanalysisData.setModel(datamodel);
        
    }

    
    @Override
    public int getSelectedRow(){
        
        /* Gets the selected row to delete. */
        
        return tblReanalysisData.getSelectedRow();
    
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedMain = new javax.swing.JTabbedPane();
        jpnFiles = new javax.swing.JPanel();
        jscrReanalysisData = new javax.swing.JScrollPane();
        tblReanalysisData = new javax.swing.JTable();
        btnMainMenu = new javax.swing.JButton();
        btnAddFile = new javax.swing.JButton();
        btnDeleteFile = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jmMenu = new javax.swing.JMenu();
        itemMainMenu = new javax.swing.JMenuItem();
        jmHelp = new javax.swing.JMenu();
        itemHelpManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SPAMDA 1.0-Manage reanalysis data");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setResizable(false);

        jpnFiles.setRequestFocusEnabled(false);

        jscrReanalysisData.setBorder(null);

        tblReanalysisData.setBorder(null);
        tblReanalysisData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "File name", "Variable", "# Instances", "# Nodes of reanalysis", "Time from", "Time to", "Latitude from", "Latitude to", "Longitude from", "Longitude to"
            }
        ) {

            /* Generated by NetBeans. */
            private static final long serialVersionUID = -1006288877740180822L;

            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReanalysisData.setToolTipText("Reanalysis data files");
        tblReanalysisData.setName("tblReanalysisData"); // NOI18N
        tblReanalysisData.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblReanalysisData.getTableHeader().setReorderingAllowed(false);
        jscrReanalysisData.setViewportView(tblReanalysisData);
        if (tblReanalysisData.getColumnModel().getColumnCount() > 0) {
            tblReanalysisData.getColumnModel().getColumn(0).setMinWidth(0);
            tblReanalysisData.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblReanalysisData.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        btnMainMenu.setText("Main menu");
        btnMainMenu.setToolTipText("Back to Main menu");

        btnAddFile.setText("Add reanalysis file");
        btnAddFile.setToolTipText("Add a new reanalysis data file");

        btnDeleteFile.setText("Delete reanalysis file");
        btnDeleteFile.setToolTipText("Delete the selected reanalysis data file");

        javax.swing.GroupLayout jpnFilesLayout = new javax.swing.GroupLayout(jpnFiles);
        jpnFiles.setLayout(jpnFilesLayout);
        jpnFilesLayout.setHorizontalGroup(
            jpnFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jscrReanalysisData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnFilesLayout.createSequentialGroup()
                        .addGap(0, 413, Short.MAX_VALUE)
                        .addComponent(btnMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteFile)))
                .addContainerGap())
        );
        jpnFilesLayout.setVerticalGroup(
            jpnFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jscrReanalysisData, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jpnFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteFile)
                    .addComponent(btnAddFile)
                    .addComponent(btnMainMenu))
                .addContainerGap())
        );

        jTabbedMain.addTab("Reanalysis data", jpnFiles);

        jmMenu.setText("Menu");

        itemMainMenu.setText("Main menu");
        itemMainMenu.setToolTipText("Back to Main menu.");
        jmMenu.add(itemMainMenu);

        jMenuBar.add(jmMenu);

        jmHelp.setText("Help");

        itemHelpManual.setText("Help (User manual)");
        jmHelp.add(itemHelpManual);

        jMenuBar.add(jmHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFile;
    private javax.swing.JButton btnDeleteFile;
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JMenuItem itemHelpManual;
    private javax.swing.JMenuItem itemMainMenu;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JTabbedPane jTabbedMain;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenu jmMenu;
    private javax.swing.JPanel jpnFiles;
    private javax.swing.JScrollPane jscrReanalysisData;
    private javax.swing.JTable tblReanalysisData;
    // End of variables declaration//GEN-END:variables
}
