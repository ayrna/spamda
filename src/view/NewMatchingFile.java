/*
SPAMDA: Software for Pre-processing and Analysis of Meteorological DAta to build datasets

Copyright (c) 2017-2018 by AYRNA Research Group. https://www.uco.es/ayrna/
	Authors: 
		Antonio Manuel Gomez Orellana, Juan Carlos Fernandez Caballero,
		Manuel Dorado Moreno, Pedro Antonio Gutierrez Pe√±a and 
		Cesar Hervas Martinez.

This program is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program,
in the file COPYING. If not, see <http://www.gnu.org/licenses/>.

Additional permissions under GNU GPL version 3 section 7:
1. Redistributions of source code, with or without modification, must retain
the above full copyright notice as author attributions.

2. Redistributions in binary form and/or the use of the documentation,
with or without modification, must reproduce the above full copyright notice
as author attributions in the documentation and/or materials provided with
the distribution.

3. Modified versions of source code and/or documentation, as well as binary
distributions, must be marked in reasonable ways as different from the original version.

4. Neither name of copyright holders nor the names of its contributors may be used
to endorse or promote products derived from this software for publicity purposes
without specific prior written permission.

5. Redistribution and/or use of source code, binary format and documentation,
with or without modification, could require indemnification of licensors
and authors by anyone who conveys the material (or modified versions of it)
with contractual assumptions of liability to the recipient, for any liability
that these contractual assumptions directly impose on those licensors and authors.

SPAMDA uses some external libraries. You can see their respective notices about license,
copyright and disclaimer in the following files. For a more complete information about
such licenses, see the distributions provided by their authors:
-Library NetCDF Java, version 4.6.10
	Notice of license in the file NetCDF-LICENSE
-Library SLF4J, version 1.7.25
	Notice of license in the file SLF4J-LICENSE
-Library WEKA, version 3.8.1
	Notice of license in the file WEKA-LICENSE

Contact information:
Juan Carlos Fernandez Caballero, PhD.
email: jfcaballero[at]uco[dot]es
Address: University of Cordoba, Department of Computer Science
and Numerical Analysis, AYRNA Research Group, Rabanales Campus,
Einstein Building, 3rd floor. Road Madrid-Cadiz, Km 396-A.
14071 - Cordoba (Spain).
 */

package view;

import controller.ControllerViewNewMatchingFile;
import view.interfaces.InterfaceViewNewMatchingFile;


/**
 * This class defines the view to create a new XML file with the information related to a matching process.
 * 
 */
public class NewMatchingFile extends javax.swing.JDialog implements InterfaceViewNewMatchingFile {
    
    /* Generated by NetBeans. */
    private static final long serialVersionUID = 8184968603036309752L;
    
        
    /**
     * Creates new dialog NewMatchingFile
     * 
     * @param parent Jframe that creates this dialog.
     * @param modal Indicates if the dialog is modal or not.
     */
    public NewMatchingFile(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();             
        
    }
    
    
    /* Methods of InterfaceViewNewMatchingFile */

    

    @Override
    public void setController(ControllerViewNewMatchingFile controller){
        
        /* Buttons. */
        btnCancelMatching.addActionListener(controller);
        btnSaveMatching.addActionListener(controller);        
        
        /* Menu items. */        
        itemCancel.addActionListener(controller);        
        itemHelpManual.addActionListener(controller);   
    
    }

    
    @Override
    public void showView(){        
        
        /* Shows the view. */
        this.setVisible(true);
    
    }

    
    @Override
    public void closeView(){
    
        /* Closes the view. */
        this.dispose();
        
    }
               
    
    @Override
    public String getMatchingFileName(){
        
        /* Gets the dataset file name to create. */
        
        return jtfFileName.getText();
        
    }
    

    @Override
    public String getShortDescription(){
        
        /* Gets the short descrption about the dataset file created. */
        
        return jtaShortDescription.getText();
    
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnMatching = new javax.swing.JPanel();
        lblShortDescription = new javax.swing.JLabel();
        jscrShortDescription = new javax.swing.JScrollPane();
        jtaShortDescription = new javax.swing.JTextArea();
        lblFileName = new javax.swing.JLabel();
        jtfFileName = new javax.swing.JTextField();
        btnCancelMatching = new javax.swing.JButton();
        btnSaveMatching = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jmMenu = new javax.swing.JMenu();
        itemCancel = new javax.swing.JMenuItem();
        jmHelp = new javax.swing.JMenu();
        itemHelpManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SPAMDA 1.0-New matching configuration");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setResizable(false);

        jpnMatching.setBorder(javax.swing.BorderFactory.createTitledBorder("Matching configuration"));

        lblShortDescription.setText("Short description");

        jtaShortDescription.setColumns(20);
        jtaShortDescription.setRows(5);
        jtaShortDescription.setToolTipText("Short description of the matching configuration");
        jscrShortDescription.setViewportView(jtaShortDescription);

        lblFileName.setText("File name");

        jtfFileName.setToolTipText("File name of the matching configuration to create");

        javax.swing.GroupLayout jpnMatchingLayout = new javax.swing.GroupLayout(jpnMatching);
        jpnMatching.setLayout(jpnMatchingLayout);
        jpnMatchingLayout.setHorizontalGroup(
            jpnMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnMatchingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblShortDescription)
                    .addGroup(jpnMatchingLayout.createSequentialGroup()
                        .addComponent(jscrShortDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpnMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFileName))))
                .addContainerGap())
        );
        jpnMatchingLayout.setVerticalGroup(
            jpnMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnMatchingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblShortDescription)
                .addGroup(jpnMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnMatchingLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jscrShortDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnMatchingLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblFileName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        btnCancelMatching.setText("Cancel");
        btnCancelMatching.setToolTipText("Cancel action and back to Final datasets");

        btnSaveMatching.setText("Save");
        btnSaveMatching.setToolTipText("Save matching configuration");
        btnSaveMatching.setActionCommand("Save matching");

        jmMenu.setText("Menu");

        itemCancel.setText("Cancel");
        itemCancel.setToolTipText("Cancel action and back to Preprocess.");
        jmMenu.add(itemCancel);

        jMenuBar.add(jmMenu);

        jmHelp.setText("Help");

        itemHelpManual.setText("Help (User manual)");
        jmHelp.add(itemHelpManual);

        jMenuBar.add(jmHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnMatching, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelMatching, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaveMatching, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnMatching, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveMatching)
                    .addComponent(btnCancelMatching))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelMatching;
    private javax.swing.JButton btnSaveMatching;
    private javax.swing.JMenuItem itemCancel;
    private javax.swing.JMenuItem itemHelpManual;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenu jmMenu;
    private javax.swing.JPanel jpnMatching;
    private javax.swing.JScrollPane jscrShortDescription;
    private javax.swing.JTextArea jtaShortDescription;
    private javax.swing.JTextField jtfFileName;
    private javax.swing.JLabel lblFileName;
    private javax.swing.JLabel lblShortDescription;
    // End of variables declaration//GEN-END:variables
}
